rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Users collection
    match /users/{userId} {
      allow read: if (request.auth != null && request.auth.uid == userId) ||
                     (request.auth != null &&
                      exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                      get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);

      allow create: if request.auth != null && request.auth.uid == userId;

      allow update: if ((request.auth != null && request.auth.uid == userId) && request.resource.data.isAdmin == resource.data.isAdmin) ||
                       (request.auth != null &&
                        exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true);

      allow delete: if request.auth != null &&
                       exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                       get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    // Stores collection
    match /stores/{storeId} {
      allow read: if true;
      allow write, delete: if request.auth != null &&
                             exists(/databases/$(database)/documents/users/$(request.auth.uid)) &&
                             get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;

    }

    // Products collection
    match /products/{productId} {
      allow read: if true;
      // TEMPORARY DIAGNOSTIC RULE - PHASE 2:
      // This rule ONLY checks if the requester is authenticated at all.
      allow write: if request.auth != null;
    }

    // Catch-all for any other paths not explicitly matched above.
    match /{document=**} {
       allow read, write: if false;
    }
  }
}